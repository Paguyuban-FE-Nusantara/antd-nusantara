{"version":3,"sources":["../../../../lib/components/buttonGroup/index.tsx"],"names":["Radio","ButtonGroupWrapper","ButtonGroup","color","groups","rest","map","row","value","label"],"mappings":";;;;;;AACA,SAASA,KAAT,QAAkC,MAAlC;AACA,OAAOC,kBAAP,MAA+B,SAA/B;;AAcA,MAAMC,WAAkC,GAAG,QAAgC;AAAA,MAA/B;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAA+B;AAAA,MAAXC,IAAW;;AACzE,sBACE,oBAAC,kBAAD;AAAoB,IAAA,KAAK,EAAEF;AAA3B,kBACE,oBAAC,KAAD,CAAO,KAAP,EAAiBE,IAAjB,EACGD,MAAM,CAACE,GAAP,CAAYC,GAAD,iBACV,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,KAAK,EAAEA,GAAG,CAACC;AAAzB,KAAiCD,GAAG,CAACE,KAArC,CADD,CADH,CADF,CADF;AASD,CAVD;;AAYA,eAAeP,WAAf","sourcesContent":["import { FC } from 'react';\nimport { Radio, RadioProps } from 'antd';\nimport ButtonGroupWrapper from './style';\n\nexport interface Group {\n  label: string;\n  value: string | number;\n}\n\ntype Groups = Group[];\n\nexport interface IButtonGroupProps extends RadioProps {\n  color?: 'secondary' | 'primary' | undefined;\n  groups: Groups;\n}\n\nconst ButtonGroup: FC<IButtonGroupProps> = ({ color, groups, ...rest }) => {\n  return (\n    <ButtonGroupWrapper color={color}>\n      <Radio.Group {...rest}>\n        {groups.map((row) => (\n          <Radio.Button value={row.value}>{row.label}</Radio.Button>\n        ))}\n      </Radio.Group>\n    </ButtonGroupWrapper>\n  );\n};\n\nexport default ButtonGroup;\n"],"file":"index.js"}