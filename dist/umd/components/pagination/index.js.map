{"version":3,"sources":["../../../../lib/components/pagination/index.tsx"],"names":["currentPage","pageSize","totalCount","className","BasePagination","props","lastPage","Math","onNext","onPageChange","onPrevious","onFirst","onLast"],"mappings":"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","sourcesContent":["import React,{ FC } from 'react';\nimport { Col, Row, Button } from 'antd';\nimport {\n  DoubleLeftOutlined,\n  DoubleRightOutlined,\n  LeftOutlined,\n  RightOutlined,\n} from '@ant-design/icons';\nimport PaginationWrapper from './style';\n\nexport interface IPaginationProps {\n  onPageChange: Function;\n  currentPage: number;\n  pageSize: number;\n  totalCount: number;\n  className?: string;\n}\n\nconst BasePagination: FC<IPaginationProps> = (props) => {\n  const { onPageChange, currentPage, pageSize, totalCount, className } = props;\n  if (currentPage === 0) {\n    return null;\n  }\n\n  const lastPage = Math.ceil(totalCount / pageSize);\n\n  const onNext = () => {\n    onPageChange(currentPage + 1);\n  };\n\n  const onPrevious = () => {\n    onPageChange(currentPage - 1);\n  };\n\n  const onFirst = () => {\n    onPageChange(1);\n  };\n\n  const onLast = () => {\n    onPageChange(lastPage);\n  };\n\n  return (\n    <PaginationWrapper className={className}>\n      <Row justify=\"end\" gutter={8}>\n        <Col>\n          <Button\n            type=\"text\"\n            shape=\"circle\"\n            icon={<DoubleLeftOutlined />}\n            onClick={onFirst}\n            disabled={currentPage === 1 || totalCount === 0}\n          />\n        </Col>\n        <Col>\n          <Button\n            type=\"text\"\n            shape=\"circle\"\n            icon={<LeftOutlined />}\n            onClick={onPrevious}\n            disabled={currentPage === 1 || totalCount === 0}\n          />\n        </Col>\n        <Col>\n          <Button\n            type=\"text\"\n            shape=\"circle\"\n            icon={<RightOutlined />}\n            onClick={onNext}\n            disabled={currentPage === lastPage || totalCount === 0}\n          />\n        </Col>\n        <Col>\n          <Button\n            type=\"text\"\n            shape=\"circle\"\n            icon={<DoubleRightOutlined />}\n            onClick={onLast}\n            disabled={currentPage === lastPage || totalCount === 0}\n          />\n        </Col>\n      </Row>\n    </PaginationWrapper>\n  );\n};\n\nexport default BasePagination;\n"],"file":"index.js"}