{"version":3,"sources":["../../../../lib/components/buttonGroup/index.tsx"],"names":["label","value","groups","ButtonGroup","rest","color","row"],"mappings":";;;;;;;;;;;;;;;;;;;;;MACA,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,QAAMG,WAAkC,GAAG,IAAA,IAAgC;AAAA,QAA/B;AAAA,MAAA,KAAA;AAASD,MAAAA;AAAT,QAA+B,IAAA;AAAA,QAAXE,IAAW,GAAA,wBAAA,CAAA,IAAA,EAAA,SAAA,CAAA;;AACzE,WAAA,aACE,KAAA,CAAA,aAAA,CAAA,eAAA,EAAA;AAAoB,MAAA,KAAK,EAAEC;AAA3B,KAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,YAAA,KAAA,EAAA,IAAA,EACG,MAAM,CAAN,GAAA,CAAYC,GAAD,IAAA,aACV,KAAA,CAAA,aAAA,CAAA,YAAA,MAAA,EAAA;AAAc,MAAA,KAAK,EAAEA,GAAG,CAACL;AAAzB,KAAA,EAAiCK,GAAG,CAJ5C,KAIQ,CADD,CADH,CADF,CADF;AADF,GAAA;;;AAHEJ,IAAAA,M;AARAF,MAAAA,K;AACAC,MAAAA,K;;;oBAsBF,W","sourcesContent":["import { FC } from 'react';\nimport * as React from \"react\"\nimport { Radio, RadioProps } from 'antd';\nimport ButtonGroupWrapper from './style';\n\nexport interface Group {\n  label: string;\n  value: string | number;\n}\n\ntype Groups = Group[];\n\nexport interface IButtonGroupProps extends RadioProps {\n  color?: 'secondary' | 'primary' | undefined;\n  groups: Groups;\n}\n\nconst ButtonGroup: FC<IButtonGroupProps> = ({ color, groups, ...rest }) => {\n  return (\n    <ButtonGroupWrapper color={color}>\n      <Radio.Group {...rest}>\n        {groups.map((row) => (\n          <Radio.Button value={row.value}>{row.label}</Radio.Button>\n        ))}\n      </Radio.Group>\n    </ButtonGroupWrapper>\n  );\n};\n\nexport default ButtonGroup;\n"],"file":"index.js"}