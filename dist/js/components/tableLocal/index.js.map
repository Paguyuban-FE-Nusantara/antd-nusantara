{"version":3,"sources":["../../../../lib/components/tableLocal/index.tsx"],"names":["Option","Select","startPage","TableLocal","props","dataSource","columns","orderingNumber","withNumber","rest","React","useState","currentPage","setCurrentPage","pageSize","setPageSize","currentTableData","useMemo","firstPageIndex","lastPageIndex","slice","numberColumn","title","key","width","render","value","item","index","onSizeChange","size","startItem","endItem","total","length","record","span","page"],"mappings":"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","sourcesContent":["import { Col, Row, Select, TableProps } from 'antd';\nimport * as React from 'react';\nimport TableWrapper from './style';\nimport Table from \"../table\";\nimport Pagination from \"../pagination\";\n\nexport interface ITableLocalProps<T extends object> extends TableProps<T> {\n  orderingNumber?: number;\n  withNumber?: boolean;\n}\n\nconst { Option } = Select;\n\nconst startPage = 1;\n\nconst TableLocal = <T extends object = object>(props: ITableLocalProps<T>) => {\n  const { dataSource, columns = [], orderingNumber, withNumber = false, ...rest } = props;\n\n  const [currentPage, setCurrentPage] = React.useState(startPage);\n  const [pageSize, setPageSize] = React.useState(5);\n\n  const currentTableData = React.useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * pageSize;\n    const lastPageIndex = firstPageIndex + pageSize;\n    return dataSource?.slice(firstPageIndex, lastPageIndex);\n  }, [dataSource, pageSize, currentPage]);\n\n  const numberColumn = [\n    {\n      title: 'No',\n      key: 'index',\n      width: 30,\n      render: (value: any, item: any, index: number) => (currentPage - 1) * pageSize + (index + 1),\n    },\n  ];\n\n  const onSizeChange = (size: React.SetStateAction<number>) => {\n    setPageSize(size);\n    setCurrentPage(1);\n  };\n\n  const startItem = (currentPage - 1) * pageSize + 1;\n  const endItem = currentPage * pageSize;\n  const total = dataSource?.length;\n\n  return (\n    <TableWrapper>\n      <Row>\n        <Col span={24}>\n          <Table\n            rowClassName={(record: any, index: number) =>\n              index % 2 === 0 ? 'table-row-light' : 'table-row-dark'\n            }\n            dataSource={currentTableData}\n            pagination={false}\n            columns={withNumber ? [...numberColumn, ...columns] : columns}\n            {...rest}\n          />\n        </Col>\n      </Row>\n      <Row justify=\"end\" align=\"middle\" className=\"action-bottom\">\n        <Col xl={{ span: 6 }} lg={{ span: 8 }} md={{ span: 12 }}>\n          <Row justify=\"end\" gutter={24}>\n            <Col>Baris per halaman</Col>\n            <Col>\n              <Select className=\"select-size\" defaultValue={pageSize} onChange={onSizeChange}>\n                <Option value={5}>5</Option>\n                <Option value={10}>10</Option>\n                <Option value={20}>20</Option>\n              </Select>\n            </Col>\n          </Row>\n        </Col>\n        <Col xl={{ span: 3 }} lg={{ span: 4 }} md={{ span: 12 }} className=\"text-right\">\n          {startItem} - {endItem} dari {total}\n        </Col>\n        <Col xl={{ span: 4 }} lg={{ span: 7 }} md={{ span: 12 }} className=\"text-right\">\n          <Pagination\n            className=\"pagination-bar\"\n            currentPage={currentPage}\n            totalCount={total || 0}\n            pageSize={pageSize}\n            onPageChange={(page: React.SetStateAction<number>) => setCurrentPage(page)}\n          />\n        </Col>\n      </Row>\n    </TableWrapper>\n  );\n};\n\nexport default TableLocal;\n"],"file":"index.js"}